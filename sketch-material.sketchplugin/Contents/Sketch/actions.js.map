{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/common/constants.js","webpack://exports/./src/handlers/actions.js","webpack://exports/./src/utils/global/load-framework.js","webpack://exports/external \"sketch/settings\""],"names":["pluginId","baseURL","layerSettingsPanelId","stylesPanelId","Settings","require","onStartup","context","frameWork","FrameWork","initFramework","SketchMaterialManager","sketchManager","alloc","init","setContext","onSelectionChanged","threadDictionary","NSThread","mainThread","browserWindow","CONSTS","action","actionContext","selection","newSelection","selecitonLoop","objectEnumerator","sel","nextObject","settingsJSON","meta","userInfo","Object","keys","map","k","key","value","layerSettingForKey","windowObject","evaluateWebScript","JSON","stringify","onPaste","frameworkName","pluginRoot","mocha","Mocha","sharedRuntime","NSClassFromString","loadFrameworkWithName_inDirectory","log"],"mappings":"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","file":"actions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/handlers/actions.js\");\n","export default {\n  pluginId: \"com.google.material2.active\",\n  // baseURL: 'https://google-com-sketch-material.firebaseapp.com/',\n  baseURL: 'http://localhost:8082/',\n  layerSettingsPanelId: 'com.gsid.sketch.material.layer.settings',\n  stylesPanelId: 'com.gsid.sketch.material.styles.13121'\n}\n","import CONSTS from \"../common/constants\";\nimport FrameWork from '../utils/global/load-framework'\n\nvar Settings = require(\"sketch/settings\");\n\n\n\nexport function onStartup(context) {\n  let frameWork = FrameWork.initFramework('SketchMaterial');\n  if (SketchMaterialManager) {\n    let sketchManager = SketchMaterialManager.alloc().init();\n    sketchManager.setContext(context);\n  }\n}\n\nexport function onSelectionChanged(context) {\n\n  // log(context.actionContext);\n\n  var threadDictionary = NSThread.mainThread().threadDictionary();\n  var browserWindow = threadDictionary[CONSTS.layerSettingsPanelId];\n\n  if (!browserWindow) {\n    return;\n  }\n\n  const action = context.actionContext;\n  const selection = action.newSelection;\n\n  var selecitonLoop = selection.objectEnumerator(),\n    sel;\n\n  while ((sel = selecitonLoop.nextObject())) {\n    let settingsJSON = [],\n      meta = [];\n    if (sel.userInfo()) {\n      settingsJSON = sel.userInfo()[CONSTS.pluginId] || [];\n      meta = Object.keys(settingsJSON).map((k) => {\n        return {\n          key: k,\n          value: Settings.layerSettingForKey(sel, k)\n        };\n      });\n    }\n\n    browserWindow.windowObject.evaluateWebScript(\n      `window.vm.$store.state.layerMetadata=${JSON.stringify(meta)};`\n    );\n  }\n}\n\n\nexport function onPaste(context) {\n\n}\n","export default {\n  initFramework(frameworkName) {\n    var pluginRoot;\n    pluginRoot = \"/Users/gsid/Library/Developer/Xcode/DerivedData/SketchMaterial-dcfonlecjckrqcaaituorzhlrpgo/Build/Products/Debug/\";\n\n    var mocha = Mocha.sharedRuntime();\n    if (NSClassFromString(frameworkName) == null) {\n      if (!mocha.loadFrameworkWithName_inDirectory(frameworkName, pluginRoot)) {\n        log('An error ocurred while loading the SketchMaterial Framework.');\n        return;\n      }\n    }\n  },\n}\n","module.exports = require(\"sketch/settings\");"],"sourceRoot":""}